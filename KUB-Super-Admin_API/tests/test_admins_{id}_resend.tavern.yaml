test_name: GET Admins Test

marks:
  - parametrize:
      key:
        - request_last_name
        - request_first_name
        - request_middle_name
        - request_email
      vals:
        - [ "Doe", "John", "Edward", "john.doe@example.com" ]

stages:
  - name: create admin
    request:
      url: "https://stage.superadmin.api.kub.education/admins"
      method: POST
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
        Content-Type: "application/json"
      json:
        last_name: "{request_last_name}"
        first_name: "{request_first_name}"
        middle_name: "{request_middle_name}"
        email: "{request_email}"
    response:
      status_code: 201
      json:
        id: !anyint
        user_id: !anyint
        last_name: "{request_last_name}"
        first_name: "{request_first_name}"
        middle_name: "{request_middle_name}"
        email: "{request_email}"
        status: !anystr
      save:
        json:
          returned_id: id

  - name: resend password
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}/resend"
      method: POST
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 200
      json:
        id: !anyint
        user_id: !anyint
        last_name: "{request_last_name}"
        first_name: "{request_first_name}"
        middle_name: "{request_middle_name}"
        email: "{request_email}"
        status: !anystr

finally:
  - name: delete admin
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}"
      method: DELETE
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 204

  - name: check if created admin really doesn't exist
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}"
      method: GET
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 404

---

test_name: test admins/{id}/resend endpoint for bad request

marks:
  - parametrize:
      key:
        - wrong_id
      vals:
        - ["agadg"]

stages:
  - name: check admins/id/resend post for bad request
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{wrong_id}/resend"
      method: GET
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 400

---

test_name: test admins/{id}/resend endpoint for not found error

marks:
  - parametrize:
      key:
        - request_last_name
        - request_first_name
        - request_middle_name
        - request_email
      vals:
        - [ "Doe", "John", "Edward", "john.doe@example.com" ]

stages:
  - name: create admin
    request:
      url: "https://stage.superadmin.api.kub.education/admins"
      method: POST
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
        Content-Type: "application/json"
      json:
        last_name: "{request_last_name}"
        first_name: "{request_first_name}"
        middle_name: "{request_middle_name}"
        email: "{request_email}"
    response:
      status_code: 201
      json:
        id: !anyint
        user_id: !anyint
        last_name: "{request_last_name}"
        first_name: "{request_first_name}"
        middle_name: "{request_middle_name}"
        email: "{request_email}"
        status: !anystr
      save:
        json:
          returned_id: id

finally:
  - name: delete admin
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}"
      method: DELETE
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 204

  - name: check if deleted admin really doesn't exist
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}"
      method: GET
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 404

---

test_name: test admins/{id}/resend endpoint for wrong autorization header

marks:
  - parametrize:
      key:
        - wrong_token
        - request_last_name
        - request_first_name
        - request_middle_name
        - request_email
      vals:
        - [ "satsgag", "Doe", "John", "Edward", "john.doe@example.com" ]

stages:
  - name: create test admin
    request:
      url: "https://stage.superadmin.api.kub.education/admins"
      method: POST
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
        Content-Type: "application/json"
      json:
        last_name: "{request_last_name}"
        first_name: "{request_first_name}"
        middle_name: "{request_middle_name}"
        email: "{request_email}"
    response:
      status_code: 201
      json:
        id: !anyint
        user_id: !anyint
        last_name: "{request_last_name}"
        first_name: "{request_first_name}"
        middle_name: "{request_middle_name}"
        email: "{request_email}"
        status: !anystr
      save:
        json:
          returned_id: id

  - name: check admin resend post for wrong autorization header
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}/resend"
      method: POST
      headers:
        X-SUPER-ADMIN-KEY: "{wrong_token}"
    response:
      status_code: 401

finally:
  - name: delete admin
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}"
      method: DELETE
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 204

  - name: check if created admin really doesn't exist
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{returned_id}"
      method: GET
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 404

---

test_name: test admins/{id}/resend endpoint for unprocessible entity

marks:
  - parametrize:
      key:
        - wrong_id
      vals:
        - [-1]

stages:
  - name: check admin resend post for unprocessible entity
    request:
      url: "https://stage.superadmin.api.kub.education/admins/{wrong_id}/resend"
      method: POST
      headers:
        X-SUPER-ADMIN-KEY: "{tavern.env_vars.TOKEN}"
    response:
      status_code: 422